// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/05/2019 09:04:07"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Lab6_Part2_VHDL_ROM
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Lab6_Part2_VHDL_ROM_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CIN;
reg MemCLK;
reg Reset;
// wires                                               
wire [14:0] A;
wire CLK;
wire COUT;
wire [3:0] Data;
wire IR0;
wire IR1;
wire IR2;
wire IRLD;
wire [1:0] MSA;
wire [1:0] MSB;
wire [2:0] MSC;
wire [3:0] OUTPUT;
wire PCINC;
wire PCLD;
wire Q0;
wire Q1;
wire [3:0] REGA;
wire [3:0] REGB;

// assign statements (if any)                          
Lab6_Part2_VHDL_ROM i1 (
// port map - connection between master ports and signals/registers   
	.A(A),
	.CIN(CIN),
	.CLK(CLK),
	.COUT(COUT),
	.Data(Data),
	.IR0(IR0),
	.IR1(IR1),
	.IR2(IR2),
	.IRLD(IRLD),
	.MemCLK(MemCLK),
	.MSA(MSA),
	.MSB(MSB),
	.MSC(MSC),
	.\OUTPUT (OUTPUT),
	.PCINC(PCINC),
	.PCLD(PCLD),
	.Q0(Q0),
	.Q1(Q1),
	.REGA(REGA),
	.REGB(REGB),
	.Reset(Reset)
);
initial 
begin 
#2000000 $finish;
end 

// CIN
initial
begin
	CIN = 1'b0;
end 

// MemCLK
always
begin
	MemCLK = 1'b0;
	MemCLK = #10000 1'b1;
	#10000;
end 

// Reset
initial
begin
	Reset = 1'b0;
	Reset = #100000 1'b1;
end 
endmodule

